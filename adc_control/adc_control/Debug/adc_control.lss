
adc_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000582  00000616  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000582  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800110  00800110  00000626  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000626  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000658  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000097b  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000849  00000000  00000000  00001047  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000035b  00000000  00000000  00001890  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001bec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045d  00000000  00000000  00001cac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000216  00000000  00000000  00002109  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  0000231f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	53 c0       	rjmp	.+166    	; 0xe4 <__vector_15>
  3e:	00 00       	nop
  40:	43 c0       	rjmp	.+134    	; 0xc8 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	52 c0       	rjmp	.+164    	; 0xfa <__vector_21>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e8       	ldi	r30, 0x82	; 130
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e1       	ldi	r26, 0x10	; 16
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	89 d0       	rcall	.+274    	; 0x1d6 <main>
  c4:	5c c2       	rjmp	.+1208   	; 0x57e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_16>:
0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71};

unsigned char cnumber[4]={0,}; // FND 출력할 자리수 배열

ISR(TIMER0_OVF_vect) //타이머 오버플로우 인터럽트
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
	PORTA=0xFF;
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	8b bb       	out	0x1b, r24	; 27
}
  d8:	8f 91       	pop	r24
  da:	0f 90       	pop	r0
  dc:	0f be       	out	0x3f, r0	; 63
  de:	0f 90       	pop	r0
  e0:	1f 90       	pop	r1
  e2:	18 95       	reti

000000e4 <__vector_15>:

ISR(TIMER0_COMP_vect) //출력비교 인터럽트
{
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
	PORTA=0x00;
  ee:	1b ba       	out	0x1b, r1	; 27
}
  f0:	0f 90       	pop	r0
  f2:	0f be       	out	0x3f, r0	; 63
  f4:	0f 90       	pop	r0
  f6:	1f 90       	pop	r1
  f8:	18 95       	reti

000000fa <__vector_21>:

unsigned int bright;
ISR(ADC_vect)
{
  fa:	1f 92       	push	r1
  fc:	0f 92       	push	r0
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	0f 92       	push	r0
 102:	11 24       	eor	r1, r1
 104:	0b b6       	in	r0, 0x3b	; 59
 106:	0f 92       	push	r0
 108:	2f 93       	push	r18
 10a:	3f 93       	push	r19
 10c:	4f 93       	push	r20
 10e:	5f 93       	push	r21
 110:	6f 93       	push	r22
 112:	7f 93       	push	r23
 114:	8f 93       	push	r24
 116:	9f 93       	push	r25
 118:	af 93       	push	r26
 11a:	bf 93       	push	r27
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	ef 93       	push	r30
 122:	ff 93       	push	r31
	unsigned int ADC_Data;
	ADC_Data=ADCW;
 124:	c4 b1       	in	r28, 0x04	; 4
 126:	d5 b1       	in	r29, 0x05	; 5
	
	//밝기 업데이트
	bright=255-((float)255/1023)*ADC_Data;
 128:	be 01       	movw	r22, r28
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	27 d1       	rcall	.+590    	; 0x37e <__floatunsisf>
 130:	20 ed       	ldi	r18, 0xD0	; 208
 132:	3f e3       	ldi	r19, 0x3F	; 63
 134:	4f e7       	ldi	r20, 0x7F	; 127
 136:	5e e3       	ldi	r21, 0x3E	; 62
 138:	b0 d1       	rcall	.+864    	; 0x49a <__mulsf3>
 13a:	9b 01       	movw	r18, r22
 13c:	ac 01       	movw	r20, r24
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	8f e7       	ldi	r24, 0x7F	; 127
 144:	93 e4       	ldi	r25, 0x43	; 67
 146:	8a d0       	rcall	.+276    	; 0x25c <__subsf3>
 148:	ee d0       	rcall	.+476    	; 0x326 <__fixunssfsi>
 14a:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <bright+0x1>
 14e:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <bright>
	
	//cnumber 업데이트
	for (int i_Digit=0;i_Digit<4;i_Digit++)
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	50 e0       	ldi	r21, 0x00	; 0
	{
		cnumber[i_Digit]=ADC_Data%10;
 156:	27 c0       	rjmp	.+78     	; 0x1a6 <__vector_21+0xac>
 158:	9e 01       	movw	r18, r28
 15a:	ad ec       	ldi	r26, 0xCD	; 205
 15c:	bc ec       	ldi	r27, 0xCC	; 204
 15e:	00 d2       	rcall	.+1024   	; 0x560 <__umulhisi3>
 160:	96 95       	lsr	r25
 162:	87 95       	ror	r24
 164:	96 95       	lsr	r25
 166:	87 95       	ror	r24
 168:	96 95       	lsr	r25
 16a:	87 95       	ror	r24
 16c:	9c 01       	movw	r18, r24
 16e:	22 0f       	add	r18, r18
 170:	33 1f       	adc	r19, r19
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	82 0f       	add	r24, r18
 180:	93 1f       	adc	r25, r19
 182:	9e 01       	movw	r18, r28
 184:	28 1b       	sub	r18, r24
 186:	39 0b       	sbc	r19, r25
 188:	fa 01       	movw	r30, r20
 18a:	e0 5f       	subi	r30, 0xF0	; 240
 18c:	fe 4f       	sbci	r31, 0xFE	; 254
		ADC_Data/=10;
 18e:	20 83       	st	Z, r18
 190:	9e 01       	movw	r18, r28
 192:	e6 d1       	rcall	.+972    	; 0x560 <__umulhisi3>
 194:	ec 01       	movw	r28, r24
 196:	d6 95       	lsr	r29
 198:	c7 95       	ror	r28
 19a:	d6 95       	lsr	r29
 19c:	c7 95       	ror	r28
 19e:	d6 95       	lsr	r29
 1a0:	c7 95       	ror	r28
	
	//밝기 업데이트
	bright=255-((float)255/1023)*ADC_Data;
	
	//cnumber 업데이트
	for (int i_Digit=0;i_Digit<4;i_Digit++)
 1a2:	4f 5f       	subi	r20, 0xFF	; 255
 1a4:	5f 4f       	sbci	r21, 0xFF	; 255
 1a6:	44 30       	cpi	r20, 0x04	; 4
 1a8:	51 05       	cpc	r21, r1
 1aa:	b4 f2       	brlt	.-84     	; 0x158 <__vector_21+0x5e>
	{
		cnumber[i_Digit]=ADC_Data%10;
		ADC_Data/=10;
	}
}
 1ac:	ff 91       	pop	r31
 1ae:	ef 91       	pop	r30
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	bf 91       	pop	r27
 1b6:	af 91       	pop	r26
 1b8:	9f 91       	pop	r25
 1ba:	8f 91       	pop	r24
 1bc:	7f 91       	pop	r23
 1be:	6f 91       	pop	r22
 1c0:	5f 91       	pop	r21
 1c2:	4f 91       	pop	r20
 1c4:	3f 91       	pop	r19
 1c6:	2f 91       	pop	r18
 1c8:	0f 90       	pop	r0
 1ca:	0b be       	out	0x3b, r0	; 59
 1cc:	0f 90       	pop	r0
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	0f 90       	pop	r0
 1d2:	1f 90       	pop	r1
 1d4:	18 95       	reti

000001d6 <main>:

int main(void)
{
	DDRA=0xFF; //LED	
 1d6:	8f ef       	ldi	r24, 0xFF	; 255
 1d8:	8a bb       	out	0x1a, r24	; 26
	DDRC=0xFF; //FND
 1da:	84 bb       	out	0x14, r24	; 20
	DDRG=0x0F; //FNDselect
 1dc:	8f e0       	ldi	r24, 0x0F	; 15
 1de:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRF=DDRF & 0b11111110; //PORTF를 입력으로 설정
 1e2:	e1 e6       	ldi	r30, 0x61	; 97
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	8e 7f       	andi	r24, 0xFE	; 254
 1ea:	80 83       	st	Z, r24
	
	ADMUX=0x00; //ADC0싱글엔드, AREF, 우측정렬
 1ec:	17 b8       	out	0x07, r1	; 7
	ADCSRA=ADCSRA | 0b10001111; //단일변환모드, 인터럽트 활성화, 분주비 128
 1ee:	86 b1       	in	r24, 0x06	; 6
 1f0:	8f 68       	ori	r24, 0x8F	; 143
 1f2:	86 b9       	out	0x06, r24	; 6
	
	TCCR0=TCCR0 | 0b01001000; //고속 PWM모드설정, OC0출력사용안함
 1f4:	83 b7       	in	r24, 0x33	; 51
 1f6:	88 64       	ori	r24, 0x48	; 72
 1f8:	83 bf       	out	0x33, r24	; 51
	TIMSK=TIMSK | 0b00000011; //타이머_카운터, 오버플로우 인터럽트 허용
 1fa:	87 b7       	in	r24, 0x37	; 55
 1fc:	83 60       	ori	r24, 0x03	; 3
 1fe:	87 bf       	out	0x37, r24	; 55
	sei();
 200:	78 94       	sei

	TCCR0=TCCR0 | 0b00000111; //분주비 1024
 202:	83 b7       	in	r24, 0x33	; 51
 204:	87 60       	ori	r24, 0x07	; 7
 206:	83 bf       	out	0x33, r24	; 51
	ADCSRA=ADCSRA | 0b01000000; //ADC 시작
 208:	86 b1       	in	r24, 0x06	; 6
 20a:	80 64       	ori	r24, 0x40	; 64
 20c:	86 b9       	out	0x06, r24	; 6
	
    while(1)
    {
		ADCSRA=ADCSRA | 0b01000000;
 20e:	86 b1       	in	r24, 0x06	; 6
 210:	80 64       	ori	r24, 0x40	; 64
 212:	86 b9       	out	0x06, r24	; 6
		//FND 출력
		for (int i=0;i<4;i++)
 214:	80 e0       	ldi	r24, 0x00	; 0
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	1a c0       	rjmp	.+52     	; 0x24e <main+0x78>
		{
			PORTG=0x01<<i;
 21a:	21 e0       	ldi	r18, 0x01	; 1
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	08 2e       	mov	r0, r24
 220:	02 c0       	rjmp	.+4      	; 0x226 <main+0x50>
 222:	22 0f       	add	r18, r18
 224:	33 1f       	adc	r19, r19
 226:	0a 94       	dec	r0
 228:	e2 f7       	brpl	.-8      	; 0x222 <main+0x4c>
 22a:	20 93 65 00 	sts	0x0065, r18	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
			PORTC=SegNum[cnumber[i]];
 22e:	fc 01       	movw	r30, r24
 230:	e0 5f       	subi	r30, 0xF0	; 240
 232:	fe 4f       	sbci	r31, 0xFE	; 254
 234:	e0 81       	ld	r30, Z
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	e0 50       	subi	r30, 0x00	; 0
 23a:	ff 4f       	sbci	r31, 0xFF	; 255
 23c:	20 81       	ld	r18, Z
 23e:	25 bb       	out	0x15, r18	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 240:	ef e9       	ldi	r30, 0x9F	; 159
 242:	ff e0       	ldi	r31, 0x0F	; 15
 244:	31 97       	sbiw	r30, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <main+0x6e>
 248:	00 c0       	rjmp	.+0      	; 0x24a <main+0x74>
 24a:	00 00       	nop
	
    while(1)
    {
		ADCSRA=ADCSRA | 0b01000000;
		//FND 출력
		for (int i=0;i<4;i++)
 24c:	01 96       	adiw	r24, 0x01	; 1
 24e:	84 30       	cpi	r24, 0x04	; 4
 250:	91 05       	cpc	r25, r1
 252:	1c f3       	brlt	.-58     	; 0x21a <main+0x44>
		{
			PORTG=0x01<<i;
			PORTC=SegNum[cnumber[i]];
			_delay_ms(1);
		}
		OCR0=bright;
 254:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <bright>
 258:	81 bf       	out	0x31, r24	; 49
	}
 25a:	d9 cf       	rjmp	.-78     	; 0x20e <main+0x38>

0000025c <__subsf3>:
 25c:	50 58       	subi	r21, 0x80	; 128

0000025e <__addsf3>:
 25e:	bb 27       	eor	r27, r27
 260:	aa 27       	eor	r26, r26
 262:	0e d0       	rcall	.+28     	; 0x280 <__addsf3x>
 264:	e0 c0       	rjmp	.+448    	; 0x426 <__fp_round>
 266:	d1 d0       	rcall	.+418    	; 0x40a <__fp_pscA>
 268:	30 f0       	brcs	.+12     	; 0x276 <__addsf3+0x18>
 26a:	d6 d0       	rcall	.+428    	; 0x418 <__fp_pscB>
 26c:	20 f0       	brcs	.+8      	; 0x276 <__addsf3+0x18>
 26e:	31 f4       	brne	.+12     	; 0x27c <__addsf3+0x1e>
 270:	9f 3f       	cpi	r25, 0xFF	; 255
 272:	11 f4       	brne	.+4      	; 0x278 <__addsf3+0x1a>
 274:	1e f4       	brtc	.+6      	; 0x27c <__addsf3+0x1e>
 276:	c6 c0       	rjmp	.+396    	; 0x404 <__fp_nan>
 278:	0e f4       	brtc	.+2      	; 0x27c <__addsf3+0x1e>
 27a:	e0 95       	com	r30
 27c:	e7 fb       	bst	r30, 7
 27e:	bc c0       	rjmp	.+376    	; 0x3f8 <__fp_inf>

00000280 <__addsf3x>:
 280:	e9 2f       	mov	r30, r25
 282:	e2 d0       	rcall	.+452    	; 0x448 <__fp_split3>
 284:	80 f3       	brcs	.-32     	; 0x266 <__addsf3+0x8>
 286:	ba 17       	cp	r27, r26
 288:	62 07       	cpc	r22, r18
 28a:	73 07       	cpc	r23, r19
 28c:	84 07       	cpc	r24, r20
 28e:	95 07       	cpc	r25, r21
 290:	18 f0       	brcs	.+6      	; 0x298 <__addsf3x+0x18>
 292:	71 f4       	brne	.+28     	; 0x2b0 <__addsf3x+0x30>
 294:	9e f5       	brtc	.+102    	; 0x2fc <__addsf3x+0x7c>
 296:	fa c0       	rjmp	.+500    	; 0x48c <__fp_zero>
 298:	0e f4       	brtc	.+2      	; 0x29c <__addsf3x+0x1c>
 29a:	e0 95       	com	r30
 29c:	0b 2e       	mov	r0, r27
 29e:	ba 2f       	mov	r27, r26
 2a0:	a0 2d       	mov	r26, r0
 2a2:	0b 01       	movw	r0, r22
 2a4:	b9 01       	movw	r22, r18
 2a6:	90 01       	movw	r18, r0
 2a8:	0c 01       	movw	r0, r24
 2aa:	ca 01       	movw	r24, r20
 2ac:	a0 01       	movw	r20, r0
 2ae:	11 24       	eor	r1, r1
 2b0:	ff 27       	eor	r31, r31
 2b2:	59 1b       	sub	r21, r25
 2b4:	99 f0       	breq	.+38     	; 0x2dc <__addsf3x+0x5c>
 2b6:	59 3f       	cpi	r21, 0xF9	; 249
 2b8:	50 f4       	brcc	.+20     	; 0x2ce <__addsf3x+0x4e>
 2ba:	50 3e       	cpi	r21, 0xE0	; 224
 2bc:	68 f1       	brcs	.+90     	; 0x318 <__addsf3x+0x98>
 2be:	1a 16       	cp	r1, r26
 2c0:	f0 40       	sbci	r31, 0x00	; 0
 2c2:	a2 2f       	mov	r26, r18
 2c4:	23 2f       	mov	r18, r19
 2c6:	34 2f       	mov	r19, r20
 2c8:	44 27       	eor	r20, r20
 2ca:	58 5f       	subi	r21, 0xF8	; 248
 2cc:	f3 cf       	rjmp	.-26     	; 0x2b4 <__addsf3x+0x34>
 2ce:	46 95       	lsr	r20
 2d0:	37 95       	ror	r19
 2d2:	27 95       	ror	r18
 2d4:	a7 95       	ror	r26
 2d6:	f0 40       	sbci	r31, 0x00	; 0
 2d8:	53 95       	inc	r21
 2da:	c9 f7       	brne	.-14     	; 0x2ce <__addsf3x+0x4e>
 2dc:	7e f4       	brtc	.+30     	; 0x2fc <__addsf3x+0x7c>
 2de:	1f 16       	cp	r1, r31
 2e0:	ba 0b       	sbc	r27, r26
 2e2:	62 0b       	sbc	r22, r18
 2e4:	73 0b       	sbc	r23, r19
 2e6:	84 0b       	sbc	r24, r20
 2e8:	ba f0       	brmi	.+46     	; 0x318 <__addsf3x+0x98>
 2ea:	91 50       	subi	r25, 0x01	; 1
 2ec:	a1 f0       	breq	.+40     	; 0x316 <__addsf3x+0x96>
 2ee:	ff 0f       	add	r31, r31
 2f0:	bb 1f       	adc	r27, r27
 2f2:	66 1f       	adc	r22, r22
 2f4:	77 1f       	adc	r23, r23
 2f6:	88 1f       	adc	r24, r24
 2f8:	c2 f7       	brpl	.-16     	; 0x2ea <__addsf3x+0x6a>
 2fa:	0e c0       	rjmp	.+28     	; 0x318 <__addsf3x+0x98>
 2fc:	ba 0f       	add	r27, r26
 2fe:	62 1f       	adc	r22, r18
 300:	73 1f       	adc	r23, r19
 302:	84 1f       	adc	r24, r20
 304:	48 f4       	brcc	.+18     	; 0x318 <__addsf3x+0x98>
 306:	87 95       	ror	r24
 308:	77 95       	ror	r23
 30a:	67 95       	ror	r22
 30c:	b7 95       	ror	r27
 30e:	f7 95       	ror	r31
 310:	9e 3f       	cpi	r25, 0xFE	; 254
 312:	08 f0       	brcs	.+2      	; 0x316 <__addsf3x+0x96>
 314:	b3 cf       	rjmp	.-154    	; 0x27c <__addsf3+0x1e>
 316:	93 95       	inc	r25
 318:	88 0f       	add	r24, r24
 31a:	08 f0       	brcs	.+2      	; 0x31e <__addsf3x+0x9e>
 31c:	99 27       	eor	r25, r25
 31e:	ee 0f       	add	r30, r30
 320:	97 95       	ror	r25
 322:	87 95       	ror	r24
 324:	08 95       	ret

00000326 <__fixunssfsi>:
 326:	98 d0       	rcall	.+304    	; 0x458 <__fp_splitA>
 328:	88 f0       	brcs	.+34     	; 0x34c <__fixunssfsi+0x26>
 32a:	9f 57       	subi	r25, 0x7F	; 127
 32c:	90 f0       	brcs	.+36     	; 0x352 <__fixunssfsi+0x2c>
 32e:	b9 2f       	mov	r27, r25
 330:	99 27       	eor	r25, r25
 332:	b7 51       	subi	r27, 0x17	; 23
 334:	a0 f0       	brcs	.+40     	; 0x35e <__fixunssfsi+0x38>
 336:	d1 f0       	breq	.+52     	; 0x36c <__fixunssfsi+0x46>
 338:	66 0f       	add	r22, r22
 33a:	77 1f       	adc	r23, r23
 33c:	88 1f       	adc	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	1a f0       	brmi	.+6      	; 0x348 <__fixunssfsi+0x22>
 342:	ba 95       	dec	r27
 344:	c9 f7       	brne	.-14     	; 0x338 <__fixunssfsi+0x12>
 346:	12 c0       	rjmp	.+36     	; 0x36c <__fixunssfsi+0x46>
 348:	b1 30       	cpi	r27, 0x01	; 1
 34a:	81 f0       	breq	.+32     	; 0x36c <__fixunssfsi+0x46>
 34c:	9f d0       	rcall	.+318    	; 0x48c <__fp_zero>
 34e:	b1 e0       	ldi	r27, 0x01	; 1
 350:	08 95       	ret
 352:	9c c0       	rjmp	.+312    	; 0x48c <__fp_zero>
 354:	67 2f       	mov	r22, r23
 356:	78 2f       	mov	r23, r24
 358:	88 27       	eor	r24, r24
 35a:	b8 5f       	subi	r27, 0xF8	; 248
 35c:	39 f0       	breq	.+14     	; 0x36c <__fixunssfsi+0x46>
 35e:	b9 3f       	cpi	r27, 0xF9	; 249
 360:	cc f3       	brlt	.-14     	; 0x354 <__fixunssfsi+0x2e>
 362:	86 95       	lsr	r24
 364:	77 95       	ror	r23
 366:	67 95       	ror	r22
 368:	b3 95       	inc	r27
 36a:	d9 f7       	brne	.-10     	; 0x362 <__fixunssfsi+0x3c>
 36c:	3e f4       	brtc	.+14     	; 0x37c <__fixunssfsi+0x56>
 36e:	90 95       	com	r25
 370:	80 95       	com	r24
 372:	70 95       	com	r23
 374:	61 95       	neg	r22
 376:	7f 4f       	sbci	r23, 0xFF	; 255
 378:	8f 4f       	sbci	r24, 0xFF	; 255
 37a:	9f 4f       	sbci	r25, 0xFF	; 255
 37c:	08 95       	ret

0000037e <__floatunsisf>:
 37e:	e8 94       	clt
 380:	09 c0       	rjmp	.+18     	; 0x394 <__floatsisf+0x12>

00000382 <__floatsisf>:
 382:	97 fb       	bst	r25, 7
 384:	3e f4       	brtc	.+14     	; 0x394 <__floatsisf+0x12>
 386:	90 95       	com	r25
 388:	80 95       	com	r24
 38a:	70 95       	com	r23
 38c:	61 95       	neg	r22
 38e:	7f 4f       	sbci	r23, 0xFF	; 255
 390:	8f 4f       	sbci	r24, 0xFF	; 255
 392:	9f 4f       	sbci	r25, 0xFF	; 255
 394:	99 23       	and	r25, r25
 396:	a9 f0       	breq	.+42     	; 0x3c2 <__floatsisf+0x40>
 398:	f9 2f       	mov	r31, r25
 39a:	96 e9       	ldi	r25, 0x96	; 150
 39c:	bb 27       	eor	r27, r27
 39e:	93 95       	inc	r25
 3a0:	f6 95       	lsr	r31
 3a2:	87 95       	ror	r24
 3a4:	77 95       	ror	r23
 3a6:	67 95       	ror	r22
 3a8:	b7 95       	ror	r27
 3aa:	f1 11       	cpse	r31, r1
 3ac:	f8 cf       	rjmp	.-16     	; 0x39e <__floatsisf+0x1c>
 3ae:	fa f4       	brpl	.+62     	; 0x3ee <__floatsisf+0x6c>
 3b0:	bb 0f       	add	r27, r27
 3b2:	11 f4       	brne	.+4      	; 0x3b8 <__floatsisf+0x36>
 3b4:	60 ff       	sbrs	r22, 0
 3b6:	1b c0       	rjmp	.+54     	; 0x3ee <__floatsisf+0x6c>
 3b8:	6f 5f       	subi	r22, 0xFF	; 255
 3ba:	7f 4f       	sbci	r23, 0xFF	; 255
 3bc:	8f 4f       	sbci	r24, 0xFF	; 255
 3be:	9f 4f       	sbci	r25, 0xFF	; 255
 3c0:	16 c0       	rjmp	.+44     	; 0x3ee <__floatsisf+0x6c>
 3c2:	88 23       	and	r24, r24
 3c4:	11 f0       	breq	.+4      	; 0x3ca <__floatsisf+0x48>
 3c6:	96 e9       	ldi	r25, 0x96	; 150
 3c8:	11 c0       	rjmp	.+34     	; 0x3ec <__floatsisf+0x6a>
 3ca:	77 23       	and	r23, r23
 3cc:	21 f0       	breq	.+8      	; 0x3d6 <__floatsisf+0x54>
 3ce:	9e e8       	ldi	r25, 0x8E	; 142
 3d0:	87 2f       	mov	r24, r23
 3d2:	76 2f       	mov	r23, r22
 3d4:	05 c0       	rjmp	.+10     	; 0x3e0 <__floatsisf+0x5e>
 3d6:	66 23       	and	r22, r22
 3d8:	71 f0       	breq	.+28     	; 0x3f6 <__floatsisf+0x74>
 3da:	96 e8       	ldi	r25, 0x86	; 134
 3dc:	86 2f       	mov	r24, r22
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	60 e0       	ldi	r22, 0x00	; 0
 3e2:	2a f0       	brmi	.+10     	; 0x3ee <__floatsisf+0x6c>
 3e4:	9a 95       	dec	r25
 3e6:	66 0f       	add	r22, r22
 3e8:	77 1f       	adc	r23, r23
 3ea:	88 1f       	adc	r24, r24
 3ec:	da f7       	brpl	.-10     	; 0x3e4 <__floatsisf+0x62>
 3ee:	88 0f       	add	r24, r24
 3f0:	96 95       	lsr	r25
 3f2:	87 95       	ror	r24
 3f4:	97 f9       	bld	r25, 7
 3f6:	08 95       	ret

000003f8 <__fp_inf>:
 3f8:	97 f9       	bld	r25, 7
 3fa:	9f 67       	ori	r25, 0x7F	; 127
 3fc:	80 e8       	ldi	r24, 0x80	; 128
 3fe:	70 e0       	ldi	r23, 0x00	; 0
 400:	60 e0       	ldi	r22, 0x00	; 0
 402:	08 95       	ret

00000404 <__fp_nan>:
 404:	9f ef       	ldi	r25, 0xFF	; 255
 406:	80 ec       	ldi	r24, 0xC0	; 192
 408:	08 95       	ret

0000040a <__fp_pscA>:
 40a:	00 24       	eor	r0, r0
 40c:	0a 94       	dec	r0
 40e:	16 16       	cp	r1, r22
 410:	17 06       	cpc	r1, r23
 412:	18 06       	cpc	r1, r24
 414:	09 06       	cpc	r0, r25
 416:	08 95       	ret

00000418 <__fp_pscB>:
 418:	00 24       	eor	r0, r0
 41a:	0a 94       	dec	r0
 41c:	12 16       	cp	r1, r18
 41e:	13 06       	cpc	r1, r19
 420:	14 06       	cpc	r1, r20
 422:	05 06       	cpc	r0, r21
 424:	08 95       	ret

00000426 <__fp_round>:
 426:	09 2e       	mov	r0, r25
 428:	03 94       	inc	r0
 42a:	00 0c       	add	r0, r0
 42c:	11 f4       	brne	.+4      	; 0x432 <__fp_round+0xc>
 42e:	88 23       	and	r24, r24
 430:	52 f0       	brmi	.+20     	; 0x446 <__fp_round+0x20>
 432:	bb 0f       	add	r27, r27
 434:	40 f4       	brcc	.+16     	; 0x446 <__fp_round+0x20>
 436:	bf 2b       	or	r27, r31
 438:	11 f4       	brne	.+4      	; 0x43e <__fp_round+0x18>
 43a:	60 ff       	sbrs	r22, 0
 43c:	04 c0       	rjmp	.+8      	; 0x446 <__fp_round+0x20>
 43e:	6f 5f       	subi	r22, 0xFF	; 255
 440:	7f 4f       	sbci	r23, 0xFF	; 255
 442:	8f 4f       	sbci	r24, 0xFF	; 255
 444:	9f 4f       	sbci	r25, 0xFF	; 255
 446:	08 95       	ret

00000448 <__fp_split3>:
 448:	57 fd       	sbrc	r21, 7
 44a:	90 58       	subi	r25, 0x80	; 128
 44c:	44 0f       	add	r20, r20
 44e:	55 1f       	adc	r21, r21
 450:	59 f0       	breq	.+22     	; 0x468 <__fp_splitA+0x10>
 452:	5f 3f       	cpi	r21, 0xFF	; 255
 454:	71 f0       	breq	.+28     	; 0x472 <__fp_splitA+0x1a>
 456:	47 95       	ror	r20

00000458 <__fp_splitA>:
 458:	88 0f       	add	r24, r24
 45a:	97 fb       	bst	r25, 7
 45c:	99 1f       	adc	r25, r25
 45e:	61 f0       	breq	.+24     	; 0x478 <__fp_splitA+0x20>
 460:	9f 3f       	cpi	r25, 0xFF	; 255
 462:	79 f0       	breq	.+30     	; 0x482 <__fp_splitA+0x2a>
 464:	87 95       	ror	r24
 466:	08 95       	ret
 468:	12 16       	cp	r1, r18
 46a:	13 06       	cpc	r1, r19
 46c:	14 06       	cpc	r1, r20
 46e:	55 1f       	adc	r21, r21
 470:	f2 cf       	rjmp	.-28     	; 0x456 <__fp_split3+0xe>
 472:	46 95       	lsr	r20
 474:	f1 df       	rcall	.-30     	; 0x458 <__fp_splitA>
 476:	08 c0       	rjmp	.+16     	; 0x488 <__fp_splitA+0x30>
 478:	16 16       	cp	r1, r22
 47a:	17 06       	cpc	r1, r23
 47c:	18 06       	cpc	r1, r24
 47e:	99 1f       	adc	r25, r25
 480:	f1 cf       	rjmp	.-30     	; 0x464 <__fp_splitA+0xc>
 482:	86 95       	lsr	r24
 484:	71 05       	cpc	r23, r1
 486:	61 05       	cpc	r22, r1
 488:	08 94       	sec
 48a:	08 95       	ret

0000048c <__fp_zero>:
 48c:	e8 94       	clt

0000048e <__fp_szero>:
 48e:	bb 27       	eor	r27, r27
 490:	66 27       	eor	r22, r22
 492:	77 27       	eor	r23, r23
 494:	cb 01       	movw	r24, r22
 496:	97 f9       	bld	r25, 7
 498:	08 95       	ret

0000049a <__mulsf3>:
 49a:	0b d0       	rcall	.+22     	; 0x4b2 <__mulsf3x>
 49c:	c4 cf       	rjmp	.-120    	; 0x426 <__fp_round>
 49e:	b5 df       	rcall	.-150    	; 0x40a <__fp_pscA>
 4a0:	28 f0       	brcs	.+10     	; 0x4ac <__mulsf3+0x12>
 4a2:	ba df       	rcall	.-140    	; 0x418 <__fp_pscB>
 4a4:	18 f0       	brcs	.+6      	; 0x4ac <__mulsf3+0x12>
 4a6:	95 23       	and	r25, r21
 4a8:	09 f0       	breq	.+2      	; 0x4ac <__mulsf3+0x12>
 4aa:	a6 cf       	rjmp	.-180    	; 0x3f8 <__fp_inf>
 4ac:	ab cf       	rjmp	.-170    	; 0x404 <__fp_nan>
 4ae:	11 24       	eor	r1, r1
 4b0:	ee cf       	rjmp	.-36     	; 0x48e <__fp_szero>

000004b2 <__mulsf3x>:
 4b2:	ca df       	rcall	.-108    	; 0x448 <__fp_split3>
 4b4:	a0 f3       	brcs	.-24     	; 0x49e <__mulsf3+0x4>

000004b6 <__mulsf3_pse>:
 4b6:	95 9f       	mul	r25, r21
 4b8:	d1 f3       	breq	.-12     	; 0x4ae <__mulsf3+0x14>
 4ba:	95 0f       	add	r25, r21
 4bc:	50 e0       	ldi	r21, 0x00	; 0
 4be:	55 1f       	adc	r21, r21
 4c0:	62 9f       	mul	r22, r18
 4c2:	f0 01       	movw	r30, r0
 4c4:	72 9f       	mul	r23, r18
 4c6:	bb 27       	eor	r27, r27
 4c8:	f0 0d       	add	r31, r0
 4ca:	b1 1d       	adc	r27, r1
 4cc:	63 9f       	mul	r22, r19
 4ce:	aa 27       	eor	r26, r26
 4d0:	f0 0d       	add	r31, r0
 4d2:	b1 1d       	adc	r27, r1
 4d4:	aa 1f       	adc	r26, r26
 4d6:	64 9f       	mul	r22, r20
 4d8:	66 27       	eor	r22, r22
 4da:	b0 0d       	add	r27, r0
 4dc:	a1 1d       	adc	r26, r1
 4de:	66 1f       	adc	r22, r22
 4e0:	82 9f       	mul	r24, r18
 4e2:	22 27       	eor	r18, r18
 4e4:	b0 0d       	add	r27, r0
 4e6:	a1 1d       	adc	r26, r1
 4e8:	62 1f       	adc	r22, r18
 4ea:	73 9f       	mul	r23, r19
 4ec:	b0 0d       	add	r27, r0
 4ee:	a1 1d       	adc	r26, r1
 4f0:	62 1f       	adc	r22, r18
 4f2:	83 9f       	mul	r24, r19
 4f4:	a0 0d       	add	r26, r0
 4f6:	61 1d       	adc	r22, r1
 4f8:	22 1f       	adc	r18, r18
 4fa:	74 9f       	mul	r23, r20
 4fc:	33 27       	eor	r19, r19
 4fe:	a0 0d       	add	r26, r0
 500:	61 1d       	adc	r22, r1
 502:	23 1f       	adc	r18, r19
 504:	84 9f       	mul	r24, r20
 506:	60 0d       	add	r22, r0
 508:	21 1d       	adc	r18, r1
 50a:	82 2f       	mov	r24, r18
 50c:	76 2f       	mov	r23, r22
 50e:	6a 2f       	mov	r22, r26
 510:	11 24       	eor	r1, r1
 512:	9f 57       	subi	r25, 0x7F	; 127
 514:	50 40       	sbci	r21, 0x00	; 0
 516:	8a f0       	brmi	.+34     	; 0x53a <__mulsf3_pse+0x84>
 518:	e1 f0       	breq	.+56     	; 0x552 <__mulsf3_pse+0x9c>
 51a:	88 23       	and	r24, r24
 51c:	4a f0       	brmi	.+18     	; 0x530 <__mulsf3_pse+0x7a>
 51e:	ee 0f       	add	r30, r30
 520:	ff 1f       	adc	r31, r31
 522:	bb 1f       	adc	r27, r27
 524:	66 1f       	adc	r22, r22
 526:	77 1f       	adc	r23, r23
 528:	88 1f       	adc	r24, r24
 52a:	91 50       	subi	r25, 0x01	; 1
 52c:	50 40       	sbci	r21, 0x00	; 0
 52e:	a9 f7       	brne	.-22     	; 0x51a <__mulsf3_pse+0x64>
 530:	9e 3f       	cpi	r25, 0xFE	; 254
 532:	51 05       	cpc	r21, r1
 534:	70 f0       	brcs	.+28     	; 0x552 <__mulsf3_pse+0x9c>
 536:	60 cf       	rjmp	.-320    	; 0x3f8 <__fp_inf>
 538:	aa cf       	rjmp	.-172    	; 0x48e <__fp_szero>
 53a:	5f 3f       	cpi	r21, 0xFF	; 255
 53c:	ec f3       	brlt	.-6      	; 0x538 <__mulsf3_pse+0x82>
 53e:	98 3e       	cpi	r25, 0xE8	; 232
 540:	dc f3       	brlt	.-10     	; 0x538 <__mulsf3_pse+0x82>
 542:	86 95       	lsr	r24
 544:	77 95       	ror	r23
 546:	67 95       	ror	r22
 548:	b7 95       	ror	r27
 54a:	f7 95       	ror	r31
 54c:	e7 95       	ror	r30
 54e:	9f 5f       	subi	r25, 0xFF	; 255
 550:	c1 f7       	brne	.-16     	; 0x542 <__mulsf3_pse+0x8c>
 552:	fe 2b       	or	r31, r30
 554:	88 0f       	add	r24, r24
 556:	91 1d       	adc	r25, r1
 558:	96 95       	lsr	r25
 55a:	87 95       	ror	r24
 55c:	97 f9       	bld	r25, 7
 55e:	08 95       	ret

00000560 <__umulhisi3>:
 560:	a2 9f       	mul	r26, r18
 562:	b0 01       	movw	r22, r0
 564:	b3 9f       	mul	r27, r19
 566:	c0 01       	movw	r24, r0
 568:	a3 9f       	mul	r26, r19
 56a:	70 0d       	add	r23, r0
 56c:	81 1d       	adc	r24, r1
 56e:	11 24       	eor	r1, r1
 570:	91 1d       	adc	r25, r1
 572:	b2 9f       	mul	r27, r18
 574:	70 0d       	add	r23, r0
 576:	81 1d       	adc	r24, r1
 578:	11 24       	eor	r1, r1
 57a:	91 1d       	adc	r25, r1
 57c:	08 95       	ret

0000057e <_exit>:
 57e:	f8 94       	cli

00000580 <__stop_program>:
 580:	ff cf       	rjmp	.-2      	; 0x580 <__stop_program>
